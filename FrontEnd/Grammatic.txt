Tree          ::= Condition '$'
Condition     ::= {if ( BoolOperation ) '{' Assign '}' else if  '(' BoolOperation ')' '{' Assign '}' else '{' Assign '}' | Assign } *
Assign        ::= ? Type Variable '=' BoolOperation ';' Condition 
BoolOperation ::= AddSub { ['>' '>=' ... '==' '!=' '&&' '||'] AddSub } *
AddSub        ::= MulDiv { ['+' '-'] MulDiv } *
MulDiv        ::= Pow { ['*' '/'] Pow } *
Pow           ::= Not { '^' Not } *
Not           ::= {'!' Minus}  | Minus
Minus         ::= '-' MulDiv | Bracket 
Bracket       ::= '(' BoolOperation ')' | Variable | Number
Variable      ::= [letter] { [letter | number] } *
Number        ::= ['0' - '9'] +
Type          ::= {'int' 'double' 'char ' 'void'}
