#include <stdio.h>
#include <assert.h>
#include <sys/stat.h>
#include <malloc.h>
#include "../../../Common/GlobalInclude.hpp"
#include "../ReadTreeGlobalnclude.hpp"
#include "ReadFile.hpp"

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

static size_t CalcFileSize(const char* file);

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

InputData ReadFile(const char* inputFile, size_t* inputLen)
{
    assert(inputFile);

    FILE* inputStream = fopen(inputFile, "rb");
    assert(inputStream);

    size_t fileSize = CalcFileSize(inputFile);

    char* inputStr = (char*) calloc(fileSize + 1, sizeof(char));
    assert(inputStr);

    size_t freadReturn = fread(inputStr, sizeof(char), fileSize, inputStream);
    assert(freadReturn == fileSize);

    fclose(inputStream);

    inputStr[fileSize] = '\0';

    *inputLen = fileSize;

    InputData inputData = {};

    inputData.inputStream = inputFile;
    inputData.inputStr    = inputStr;

    return inputData;
}

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

void InputDataDtor(InputData* inputData)
{
    assert(inputData);
    assert(inputData->inputStr);
    assert(inputData->inputStream);

    FREE(inputData->inputStr);
    inputData->inputStream = nullptr;

    return;
}

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

static size_t CalcFileSize(const char* file)
{
    assert(file);

    struct stat buf = {};
    stat(file, &buf);
    return (size_t) buf.st_size;
}

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
